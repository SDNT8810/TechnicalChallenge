<?xml version="1.0"?>
<!-- Four wheel differential (skid steer) robot with lidar & depth camera -->
<robot name="sdnt_robot" xmlns:xacro="http://ros.org/wiki/xacro">

	<!-- ===================== PROPERTIES ===================== -->
	<xacro:property name="base_length" value="0.42"/>
	<xacro:property name="base_width"  value="0.31"/>
	<xacro:property name="base_height" value="0.2"/>

	<xacro:property name="wheel_radius" value="0.08"/>
	<xacro:property name="wheel_width"  value="0.04"/>
	<!-- distance from base center to wheel along X (forward +) -->
	<xacro:property name="wheel_x_offset" value="${(base_length/2) - 1.2*wheel_radius}"/>
	<!-- distance from base center to wheel along Y (left +) -->
	<xacro:property name="wheel_y_offset" value="${(base_width/2) + wheel_width/2}"/>
	<!-- wheel vertical position (joint origin relative base_link) -->
	<xacro:property name="wheel_z" value="${-(base_height/2 + 0.0)}"/>

	<!-- Sensor mounting heights -->
	<xacro:property name="lidar_height" value="0.14"/>
	<xacro:property name="camera_height" value="0.05"/>
	<xacro:property name="camera_x_forward" value="0.215"/>

	<!-- ===================== INERTIA HELPERS ===================== -->
	<xacro:macro name="box_inertia" params="m x y z">
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="${m}"/>
			<inertia ixx="${(m/12.0)*(y*y+z*z)}" ixy="0" ixz="0" iyy="${(m/12.0)*(x*x+z*z)}" iyz="0" izz="${(m/12.0)*(x*x+y*y)}"/>
		</inertial>
	</xacro:macro>

	<xacro:macro name="cylinder_inertia" params="m r l">
		<inertial>
			<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
			<mass value="${m}"/>
			<inertia ixx="${(m/12.0)*(3*r*r + l*l)}" ixy="0" ixz="0" iyy="${(m/12.0)*(3*r*r + l*l)}" iyz="0" izz="${0.5*m*r*r}"/>
		</inertial>
	</xacro:macro>

	<!-- ===================== BASE LINK ===================== -->
	<link name="base_link">
		<visual>
			<geometry>
				<box size="${base_length} ${base_width} ${base_height}"/>
			</geometry>
			<material name="Cyan"><color rgba="0 1 1 1"/></material>
		</visual>
		<collision>
			<geometry>
				<box size="${base_length} ${base_width} ${base_height}"/>
			</geometry>
		</collision>
		<xacro:box_inertia m="5.0" x="${base_length}" y="${base_width}" z="${base_height}"/>
	</link>

	<!-- Footprint (for 2D navigation) -->
	<link name="base_footprint"/>
	<joint name="base_footprint_joint" type="fixed">
		<parent link="base_link"/>
		<child link="base_footprint"/>
		<origin xyz="0 0 ${-(wheel_radius + 0.02)}"/>
	</joint>

	<!-- ===================== WHEELS ===================== -->
	<xacro:macro name="wheel" params="name x y">
		<link name="${name}_link">
			<visual>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
				<material name="Gray"><color rgba="0.5 0.5 0.5 1"/></material>
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
			</collision>
			<xacro:cylinder_inertia m="0.5" r="${wheel_radius}" l="${wheel_width}"/>
		</link>
		<joint name="${name}_joint" type="continuous">
			<parent link="base_link"/>
			<child link="${name}_link"/>
			<origin xyz="${x} ${y} ${wheel_z}" rpy="0 0 0"/>
			<axis xyz="0 1 0"/>
		</joint>
	</xacro:macro>

	<!-- Back Left / Back Right / Front Left / Front Right (left is +Y) -->
	<xacro:wheel name="back_left"  x="${-wheel_x_offset}" y="${ wheel_y_offset}"/>
	<xacro:wheel name="back_right" x="${-wheel_x_offset}" y="${-wheel_y_offset}"/>
	<xacro:wheel name="front_left"  x="${ wheel_x_offset}" y="${ wheel_y_offset}"/>
	<xacro:wheel name="front_right" x="${ wheel_x_offset}" y="${-wheel_y_offset}"/>

	<!-- ===================== LIDAR ===================== -->
	<link name="lidar_link">
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="0.125"/>
			<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
		</inertial>
		<collision>
			<geometry><cylinder radius="0.0508" length="0.055"/></geometry>
		</collision>
		<visual>
			<geometry><cylinder radius="0.0508" length="0.055"/></geometry>
		</visual>
	</link>
	<joint name="lidar_joint" type="fixed">
		<parent link="base_link"/>
		<child link="lidar_link"/>
		<origin xyz="0 0 ${lidar_height}"/>
	</joint>

	<!-- ===================== CAMERA (depth) ===================== -->
	<link name="camera_link">
		<visual>
			<geometry><box size="0.015 0.130 0.022"/></geometry>
		</visual>
		<collision>
			<geometry><box size="0.015 0.130 0.022"/></geometry>
		</collision>
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="0.035"/>
			<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="camera_joint" type="fixed">
		<parent link="base_link"/>
		<child link="camera_link"/>
		<origin xyz="${camera_x_forward} 0 ${camera_height}"/>
	</joint>

	<link name="camera_depth_frame"/>
	<joint name="camera_depth_joint" type="fixed">
		<parent link="camera_link"/>
		<child link="camera_depth_frame"/>
		<origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
	</joint>

	<!-- ===================== GAZEBO PLUGINS ===================== -->
	<gazebo>
		<plugin name="skid_steer_drive" filename="libgazebo_ros_diff_drive.so">
			<ros>
				<remap from="cmd_vel" to="/cmd_vel"/>
			</ros>
			<!-- Two wheel pairs (back & front) -->
			<num_wheel_pairs>2</num_wheel_pairs>
			<!-- Pair 1 (front) -->
			<left_joint>front_left_joint</left_joint>
			<right_joint>front_right_joint</right_joint>
			<!-- Pair 2 (back) -->
			<left_joint>back_left_joint</left_joint>
			<right_joint>back_right_joint</right_joint>

			<!-- Kinematics -->
			<wheel_separation>${2*wheel_y_offset}</wheel_separation>
			<wheel_diameter>${2*wheel_radius}</wheel_diameter>

			<!-- Limits -->
			<max_wheel_torque>20</max_wheel_torque>
			<max_wheel_acceleration>2.0</max_wheel_acceleration>
			<max_linear_velocity>2.0</max_linear_velocity>
			<min_linear_velocity>-0.8</min_linear_velocity>
			<max_angular_velocity>2.0</max_angular_velocity>
			<min_angular_velocity>-2.0</min_angular_velocity>

			<!-- Output -->
			<publish_odom>true</publish_odom>
			<publish_odom_tf>true</publish_odom_tf>
			<publish_wheel_tf>true</publish_wheel_tf>
			<odometry_frame>odom</odometry_frame>
			<robot_base_frame>base_link</robot_base_frame>
		</plugin>
	</gazebo>

	<!-- Lidar Sensor -->
	<gazebo reference="lidar_link">
		<sensor name="lidar" type="ray">
			<always_on>true</always_on>
			<visualize>true</visualize>
			<update_rate>5</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>0</min_angle>
						<max_angle>6.283185</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.12</min>
					<max>3.5</max>
					<resolution>0.015</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
				<ros><remapping>~/out:=scan</remapping></ros>
				<output_type>sensor_msgs/LaserScan</output_type>
				<frame_name>lidar_link</frame_name>
			</plugin>
		</sensor>
	</gazebo>

	<!-- Depth Camera Sensor -->
	<gazebo reference="camera_link">
		<sensor name="depth_camera" type="depth">
			<visualize>true</visualize>
			<update_rate>30.0</update_rate>
			<camera name="camera">
				<horizontal_fov>1.047198</horizontal_fov>
				<image><width>640</width><height>480</height><format>R8G8B8</format></image>
				<clip><near>0.05</near><far>3</far></clip>
			</camera>
			<plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
				<frame_name>camera_depth_frame</frame_name>
				<baseline>0.2</baseline>
				<pointCloudCutoff>0.5</pointCloudCutoff>
				<pointCloudCutoffMax>3.0</pointCloudCutoffMax>
			</plugin>
		</sensor>
	</gazebo>

</robot>
